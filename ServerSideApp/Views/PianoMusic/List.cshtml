@using ServerSideApp.Models.Piano
@using ServerSideApp.Resources;
@model ServerSideApp.Models.Piano.ListPM

@{
    ViewBag.Title = "List";
}

<h2>
    List
    @if (Model.IsSortedGenre) {
        @Html.Raw(" " + Model.GenreSelects.First(g => g.Selected).Text)
    }
    @if (Model.IsSortedDifficulty) {
        @Html.Raw(" " + Model.DifficulitySelects.First(d => d.Selected).Text)
    }
</h2>

<p>
    @if (Model.CanCreate) {
        @Html.ActionLink(Global.New, "New")
        ;
    }
</p>
@using (Html.BeginForm("List", "PianoMusic", FormMethod.Get)) {
    @Html.DropDownList("genre", Model.GenreSelects, Global.Genre, null)
    @Html.DropDownList("difficulty", Model.DifficulitySelects, Global.Difficulty, null)
    <input type="submit" id="s" name="s" value="Go!" />
}
<table class="table">
    <tr>
        <th>
            <b>@Global.Title</b>
        </th>
        <th></th>
        <th>
            <b>@Global.PostedBy</b>
        </th>
        <th>
            <b>@Global.CommentCount</b>
        </th>
        <th>
            <b>@Global.AudioFragment</b>
        </th>
        <th>
            <b>@Global.Downloads</b>
        </th>
        <th>
            <b>@Global.Upvotes</b>
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.PianoPieces) {
        <tr>
            <td>

                @Html.ActionLink(item.Composer + " - " + item.Title, "Details", new { id = item.Id })

            </td>
            <td>
                @Html.ActionLink(item.Genre, "List", new { Genre = item.GenreId })
                <br/>
                @Html.ActionLink(item.Difficulty, "List", new { Difficulty = item.DifficultyId })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CommentCount)
            </td>
            <td>
                @if (item.HasMp3) {
                    @* <audio src="~/PianoMusicFiles/@item.Mp3Path" controls="controls"></audio>*@
                    <a href="~/PianoMusicFiles/@item.Mp3Path">Mp3</a>
                }
                else {
                    @Html.Raw("/")
                    ;
                }
            </td>
            <td>
                @if (item.HasPdf) {

                    <a href="~/PianoMusicFiles/@item.PdfPath">Pdf</a>

                    @* if (item.HasMidi) {
                                @Html.Raw(" | ");
                                @Html.ActionLink("Midi", "GetMidi", new { id = item.Id });
                            }
                        }
                        else if (item.HasMidi) {
                            @Html.ActionLink("Midi", "GetMidi", new { id = item.Id });*@
                }
                else {
                    @Html.Raw("/")
                    ;
                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Upvotes)
            </td>
            <td>
                @if (item.CanEdit) {
                    @Html.ActionLink(Global.Edit, "Edit", new { id = item.Id })
                    @Html.Raw(" | ")
                    @Html.ActionLink(Global.Delete, "Delete", new { id = item.Id })
                }
                else {
                    if (item.CanUpvote) {
                        @Html.ActionLink("+", "Upvote", new { id = item.Id, vote = true }, new { @class = "btn btn-default" })
                    }
                    else {
                        @Html.ActionLink("-", "Upvote", new { id = item.Id, vote = false }, new { @class = "btn btn-default" })
                    }
                }
            </td>
        </tr>
    }

</table>
@if (Model.IsSortedGenre || Model.IsSortedDifficulty) {
    @Html.ActionLink("see all posts", "List")
}